#version 120

uniform vec4 lightPosition;
varying vec2 textureCoordOut;
varying vec2 _uv;
uniform sampler2D Texture_1;

uniform float iGlobalTime;
uniform float _x;
uniform float _y;
uniform float _w;
uniform float _h;
uniform float arrFloat[4];
uniform float iTime;
uniform vec2 iResolution;
uniform vec4 iMouse;

uniform float _mx;
uniform float _my;

vec2 fragCoord = (_uv * iResolution);
//vec2 p = (_uv * iResolution);


float distanceToSegment(vec2 a, vec2 b, vec2 p)
{
	vec2 pa = p - a;
	vec2 ba = b - a;
	float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);
	return length(pa - ba*h);
}

void main()
{
	vec2 p = fragCoord.xy / iResolution.xx;
	vec4 m = iMouse / iResolution.xxxx;

	vec3 col = vec3(0.0);
	if (m.z>0.0)
	{
		float d = distanceToSegment(m.xy, m.zw, p);
		col = mix(col, vec3(1.0, 1.0, 0.0), 1.0 - smoothstep(.004, 0.008, d));
	}

	col = mix(col, vec3(1.0, 0.0, 0.0), 1.0 - smoothstep(0.03, 0.035, length(p - m.xy)));
	col = mix(col, vec3(0.0, 0.0, 1.0), 1.0 - smoothstep(0.03, 0.035, length(p - abs(m.zw))));

	gl_FragColor = vec4(col, 1.0);
}
